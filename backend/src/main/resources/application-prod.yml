# Render 배포 환경 전용 설정
server:
  port: ${PORT} # 서버 포트

spring:
  # 데이터베이스 설정
  datasource:
    url: jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
    username: ${PGUSER}
    password: ${PGPASSWORD}
    driver-class-name: org.postgresql.Driver

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        # show_sql, format_sql: 운영 환경에서는 성능을 위해 비활성화

  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  cache:
    type: jcache
    jcache:
      provider: org.redisson.jcache.configuration.RedissonCachingProvider
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: [openid, profile, email]
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            user-name-attribute: sub

server:
  port: 8080

jwt:
  secret: ${JWT_SECRET}
  expiration: 3600000 # 1 hour

# Bucket4j Rate Limiting 설정
bucket4j:
  cache-to-use: jcache # Bucket4j 캐시 매니저로 JCache 사용
  enabled: true
  filters:
    - cache-name: rate-limit-buckets
      url: /api/v1/auth/**
      rate-limits:
        - capacity: 10
          refill-greedily: 10
          refill-period: 1 # seconds